Repeatedly find the sum of digits of a number until it becomes a single-digit number (say sod). Then compute the factorial of sod and print it.

Input Format

One line containing an integer "n" denoting number

Constraints

1<=n<=10^7

Output Format

One number denoting the factorial of single digit

Sample Input 0

23
Sample Output 0

120
Explanation 0

Sum of digits: 23 --> 2+3 = 5 Factorial of 5 is 120

Sample Input 1

99
Sample Output 1

362880
Explanation 1

sum of digits 99 --> 9+9=18 if result>9 then repeat the same process until single digit 18 --> 1+8=9 Factorial of 9 is 362880
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

long long factorial(int n) 
{
    if(n==0||n==1)
    {
        return 1;
    }
    else 
    {
        long long r=1;
        for (int i=2;i<=n;i++)
        {
            r*=i;
        }
        return r;
    }
}
int findSingleDigit(int n) 
{
    while (n>=10)
    {
        int sum=0;
        while(n>0)
        {
            sum+=n%10;
            n/=10;
        }
        n=sum;
    }
    return n;
}

int main() {
    int n;
    scanf("%d", &n);

    int sod = findSingleDigit(n);
    long long sodFactorial = factorial(sod);

    printf("%lld\n", sodFactorial);

    return 0;
}
 
